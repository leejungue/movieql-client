{"version":3,"sources":["apolloClient.js","queries.js","Movie.js","Home.js","Detail.js","App.js","globalStyles.js","index.js"],"names":["client","ApolloClient","uri","HOME_PAGE","gql","_templateObject","MOVIE_DETAILS","_templateObject2","Card","styled","div","Movie_templateObject","props","concat","background","Title","span","Movie_templateObject2","Movie","_ref","id","title","rating","poster","react_default","a","createElement","Link","to","Container","Home_templateObject","Home","Helmet","react_apollo_browser_umd","query","loading","data","error","movies","map","movie","src_Movie","key","medium_cover_image","Detail_templateObject","Image","Detail_templateObject2","withComponent","h1","_templateObject3","Paragraph","_templateObject4","bold","MovieContainer","_templateObject5","Detail","movieId","match","params","variables","_ref2","Fragment","Detail_Container","src","Detail_Title","description_intro","suggestions","App","HashRouter","Route","exact","path","component","Component","injectGlobal","globalStyles_templateObject","reset","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e4362be7.chunk.js","sourcesContent":["import ApolloClient from \"apollo-boost\";\n\nconst client = new ApolloClient({\n  uri: \"https://movieql-fxjhwetioh.now.sh/\"\n});\n\nexport default client;\n","import gql from \"graphql-tag\";\n\nexport const HOME_PAGE = gql`\n  {\n    movies(limit: 50, rating: 7) {\n      id\n      title\n      rating\n      medium_cover_image\n    }\n  }\n`;\n\nexport const MOVIE_DETAILS = gql`\n  query getMovieDetails($movieId: String!) {\n    movie(id: $movieId) {\n      medium_cover_image\n      title\n      rating\n      description_intro\n      language\n      genres\n    }\n    suggestions(id: $movieId) {\n      id\n      title\n      rating\n      medium_cover_image\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Card = styled.div`\n  border-radius: 15px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  background-image: ${props => `url(${props.background})`};\n  background-size: cover;\n  background-position: center center;\n  height: 300px;\n  width: 200px;\n  margin-bottom: 40px;\n  position: relative;\n`;\n\nconst Title = styled.span`\n  background-color: white;\n  width: auto;\n  padding: 10px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  position: absolute;\n  bottom: 25px;\n  left: 0;\n  right: 0;\n\n  margin: auto;\n`;\n\nconst Movie = ({ id, title, rating, poster }) => (\n  <Link to={`/details/${id}`}>\n    <Card background={poster}>\n      <Title>\n        {title} / {rating}⭐️\n      </Title>\n    </Card>\n  </Link>\n);\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n  poster: PropTypes.string.isRequired\n};\n\nexport default Movie;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Query } from \"react-apollo\";\nimport { Helmet } from \"react-helmet\";\nimport { HOME_PAGE } from \"./queries\";\nimport Movie from \"./Movie\";\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 0.7fr);\n  flex-wrap: wrap;\n  justify-items: center;\n`;\n\nconst Home = () => (\n  <Container>\n    <Helmet>\n      <title>Home | MovieQL</title>\n    </Helmet>\n    <Query query={HOME_PAGE}>\n      {({ loading, data, error }) => {\n        if (loading) return \"loading\";\n        if (error) return \"something happened\";\n        return data.movies.map(movie => (\n          <Movie\n            id={movie.id}\n            key={movie.id}\n            poster={movie.medium_cover_image}\n            title={movie.title}\n            rating={movie.rating}\n          />\n        ));\n      }}\n    </Query>\n  </Container>\n);\n\nexport default Home;\n","import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { MOVIE_DETAILS } from \"./queries\";\nimport { Helmet } from \"react-helmet\";\nimport Movie from \"./Movie\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  margin-bottom: 50px;\n`;\n\nconst Card = styled.div`\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  background-color: white;\n  border-radius: 7px;\n`;\n\nconst Image = Card.withComponent(\"img\");\n\nconst Title = styled.h1`\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\n\nconst Paragraph = styled.span`\n  margin-bottom: 10px;\n  display: block;\n  font-weight: ${props => (props.bold ? \"500\" : \"400\")};\n`;\n\nconst MovieContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 0.7fr);\n  flex-wrap: wrap;\n  justify-items: center;\n  margin-top: 50px;\n`;\n\nconst Detail = ({\n  match: {\n    params: { movieId }\n  }\n}) => (\n  <Query query={MOVIE_DETAILS} variables={{ movieId }}>\n    {({ loading, error, data }) => {\n      if (loading)\n        return (\n          <React.Fragment>\n            <Helmet>\n              <title>Loading | MovieQL</title>\n            </Helmet>\n            loading\n          </React.Fragment>\n        );\n      if (error) return \"error\";\n      return (\n        <React.Fragment>\n          <Container>\n            <Helmet>\n              <title>{data.movie.title} | MovieQL</title>\n            </Helmet>\n            <Image src={data.movie.medium_cover_image} />\n            <span>\n              <Title>{data.movie.title}</Title>\n              <Paragraph bold>Rating: {data.movie.rating}</Paragraph>\n              <Paragraph>{data.movie.description_intro}</Paragraph>\n            </span>\n          </Container>\n          <Title>Suggested</Title>\n          <MovieContainer>\n            {data.suggestions.map(movie => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                rating={movie.rating}\n                poster={movie.medium_cover_image}\n              />\n            ))}\n          </MovieContainer>\n        </React.Fragment>\n      );\n    }}\n  </Query>\n);\n\nexport default Detail;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { ApolloProvider } from \"react-apollo\";\nimport client from \"./apolloClient\";\nimport Home from \"./Home\";\nimport Detail from \"./Detail\";\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Router>\n          <main>\n            <Route exact={true} path={\"/\"} component={Home} />\n            <Route path={\"/details/:movieId\"} component={Detail} />\n          </main>\n        </Router>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","import { injectGlobal } from \"styled-components\";\nimport reset from \"styled-reset\";\ninjectGlobal`\n  @import url('https://fonts.googleapis.com/css?family=Maven+Pro:400,500');\n  ${reset};\n  body{\n    font-family: 'Maven Pro', sans-serif;\n    background-color: #ecf0f1;\n  }\n  a{\n      color:inherit;\n  }\n  main {\n    width: 80%;\n    margin: 0 auto;\n    padding: 20px;\n  }\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./globalStyles\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}